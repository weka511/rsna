#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('.gitignore'),
                  loc('browse.py'),
                  loc('consistent.py'),
                  loc('LICENSE'),
                  loc('mri3d.py'),
                  loc('README.md'),
                  loc('reslice.py'),
                  loc('segment1.py'),
                  loc('segment3D.py'),
                  loc('sizes.py')]
proj.file-type = 'normal'
proj.launch-config = {loc('consistent.py'): ('project',
        (u'--unique foo.txt --coplanar bar.txt',
         '')),
                      loc('reslice.py'): ('project',
        (u'D:\\data\\rsna\\train\\01002\\T1wCE\\*',
         '')),
                      loc('segment1.py'): ('project',
        (u'--study 01002',
         '')),
                      loc('segment3D.py'): ('project',
        (u'--show --study 01002  --thresholds T1wCE 2 --hist',
         '')),
                      loc('sizes.py'): ('project',
        (u'--dataset test',
         ''))}
[user attributes]
debug.recent-run-args = {loc('consistent.py'): [u'--unique foo.txt --coplanar bar.txt'],
                         loc('mri3d.py'): [u'--unique foo.txt',
        u'--unique foo.txt --studies 00100',
        u'--unique foo.txt --study 00100',
        u'--studies 00109  --unique foo.txt --show',
        u'--studies 00098  --unique foo.txt --show',
        u'--studies 00098 00099 00100 00102 --unique foo.txt',
        u'--studies 00098 00099 --unique foo.txt',
        u'--studies 00811 --show',
        u'--studies 00000 --show',
        u'00000 --show',
        u'--show',
        u'00811 00814',
        u'--help',
        u'--output temp',
        u'---output temp'],
                         loc('reslice.py'): [u'D:\\data\\rsna\\train\\01002\\T1wCE\\*',
        u'D:\\data\\rsna\\train\\00019\\T1wCE\\*',
        u'D:\\data\\rsna\\train\\00000\\T1wCE\\*',
        u'D:\\data\\rsna\\train\\00000\\FLAIR\\*',
        u'D:\\data\\rsna\\train\\00000\\FLAIR'],
                         loc('segment1.py'): [u'--study 01002',
        u'--study 00823',
        u'--study 00105',
        u'--study 00100',
        u'--studu 00100',
        u'--seqs 63 65',
        u'--study 00098',
        u'--study 00098 --show',
        u'--study 00089 --show',
        u'--study 00089'],
                         loc('segment3D.py'): [u'--show --study 01002  --thresholds T1wCE 2 --hist',
        u'--show --study 01002',
        u'--show'],
                         loc('sizes.py'): [u'--dataset test']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqE'\
        'mVIDbK',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(5,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'),
                      'abspath')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backends/backend_agg.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backends/backend_agg.py'),
                      'backend_version')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/category.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/category.py'),
                      'StrCategoryConverter')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/gridspec.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/fromnumeric.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/fromnumeric.py'),
                      'alen')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/lib/stride_tricks.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/lib/stride_tricks.py'),
                      'as_strided')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/indexes/base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/indexes/base.py'),
                      'default_index')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pydicom/dataset.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pydicom/dataset.py'),
                      'Dataset')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pydicom/filereader.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pydicom/filereader.py'),
                      'data_element_generator')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/framework/func_graph.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/keras/layers/core.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/keras/layers/core.py'),
                      'Activation')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/tkinter/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/tkinter/__init__.py'),
                      'BaseWidget')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../learn/README.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('../learn/bayes1.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('../learn/bayes1.py'),
        'alphas')]},
        loc('../learn/cavi1.py'): {'expanded-nodes': [],
                                   'selected-nodes': [[('generic attribute',
        loc('../learn/cavi1.py'),
        'ys')]],
                                   'top-node': [('generic attribute',
        loc('../learn/cavi1.py'),
        'ax1')]},
        loc('../learn/fashion.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('generic attribute',
        loc('../learn/fashion.py'),
        '_')]],
                                     'top-node': [('generic attribute',
        loc('../learn/fashion.py'),
        'class_names')]},
        loc('../learn/fcs.py'): {'expanded-nodes': [],
                                 'selected-nodes': [None],
                                 'top-node': None},
        loc('../learn/fcs/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../learn/fcs/fcs.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('../learn/fcs/fcs.py'),
        'args')]},
        loc('../learn/fcs/gcps.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../learn/fcs/gcps.py'),
        'a')]},
        loc('../learn/fcs/partition.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../learn/fcs/partition.py'),
                      'args')]},
        loc('../learn/fcs/plotreds.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../learn/fcs/plotreds.py'),
                      'args')]},
        loc('../learn/flowers.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('generic attribute',
        loc('../learn/flowers.py'),
        '_')]],
                                     'top-node': [('generic attribute',
        loc('../learn/flowers.py'),
        'args')]},
        loc('../learn/train.py'): {'expanded-nodes': [],
                                   'selected-nodes': [[('generic attribute',
        loc('../learn/train.py'),
        '_')]],
                                   'top-node': [('generic attribute',
        loc('../learn/train.py'),
        'alpha')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('browse.py'): {'expanded-nodes': [],
                           'selected-nodes': [[('generic attribute',
        loc('browse.py'),
        'bottomframe')]],
                           'top-node': [('generic attribute',
        loc('browse.py'),
        'bottomframe')]},
        loc('consistent.py'): {'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': [('generic attribute',
        loc('consistent.py'),
        'args')]},
        loc('mri3d.py'): {'expanded-nodes': [[('function def',
        loc('mri3d.py'),
        'declutter')],
        [('class def',
          loc('mri3d.py'),
          'MRI_Geometry')],
        [('class def',
          loc('mri3d.py'),
          'Study')]],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('mri3d.py'),
        'dcim')]},
        loc('reslice.py'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('generic attribute',
        loc('reslice.py'),
        'a1')]},
        loc('segment1.py'): {'expanded-nodes': [],
                             'selected-nodes': [[('class def',
        loc('segment1.py'),
        'SimpleSegmenter')]],
                             'top-node': [('generic attribute',
        loc('segment1.py'),
        'args')]},
        loc('segment3D.py'): {'expanded-nodes': [],
                              'selected-nodes': [[('generic attribute',
        loc('segment3D.py'),
        'args')]],
                              'top-node': [('generic attribute',
        loc('segment3D.py'),
        'args')]},
        loc('sizes.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('sizes.py'),
        'accumulator')]},
        loc('unknown:<untitled> #1'): {'expanded-nodes': [],
                                       'selected-nodes': [None],
                                       'top-node': None},
        loc('unknown:<untitled> #2'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [0,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'create_matrix',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'ax3',
                                       'fReverse': False,
                                       'fSearchText': u'ax2',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 157L,
                       'selection_end': 157L,
                       'selection_start': 157L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('reslice.py'),
        {'attrib-starts': [],
         'code-line': '',
         'first-line': 0L,
         'folded-linenos': [],
         'sel-line': 84L,
         'sel-line-start': 2210L,
         'selection_end': 2210L,
         'selection_start': 2210L,
         'zoom': 0L},
        1627955458.474],
        [loc('reslice.py'),
         {'attrib-starts': [],
          'code-line': '',
          'first-line': 18L,
          'folded-linenos': [],
          'sel-line': 84L,
          'sel-line-start': 2210L,
          'selection_end': 2210L,
          'selection_start': 2210L,
          'zoom': 0L},
         1627955552.127],
        [loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pydicom/filereader.py'),
         {'attrib-starts': [('dcmread|0|',
                             773)],
          'code-line': "        fp = open(fp, 'rb')\n",
          'first-line': 847L,
          'folded-linenos': [],
          'sel-line': 860L,
          'sel-line-start': 34810L,
          'selection_end': 34810L,
          'selection_start': 34810L,
          'zoom': 0L},
         1627955573.426],
        [loc('reslice.py'),
         {'attrib-starts': [],
          'code-line': 'img_shape = list(slices[0].pixel_array.shape)\r\n',
          'first-line': 42L,
          'folded-linenos': [],
          'sel-line': 61L,
          'sel-line-start': 1629L,
          'selection_end': 1629L,
          'selection_start': 1629L,
          'zoom': 0L},
         1627956732.361],
        [loc('mri3d.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 178L,
          'folded-linenos': [],
          'sel-line': 34L,
          'sel-line-start': 1607L,
          'selection_end': 1607L,
          'selection_start': 1607L,
          'zoom': 0L},
         1627957453.866],
        [loc('reslice.py'),
         {'attrib-starts': [],
          'code-line': 'img_shape = list(slices[0].pixel_array.shape)\r\n',
          'first-line': 42L,
          'folded-linenos': [],
          'sel-line': 61L,
          'sel-line-start': 1629L,
          'selection_end': 1629L,
          'selection_start': 1629L,
          'zoom': 0L},
         1627957456.827],
        [loc('mri3d.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 178L,
          'folded-linenos': [],
          'sel-line': 34L,
          'sel-line-start': 1607L,
          'selection_end': 1607L,
          'selection_start': 1607L,
          'zoom': 0L},
         1627957477.943],
        [loc('mri3d.py'),
         {'attrib-starts': [('MRI_Geometry|0|',
                             286),
                            ('MRI_Geometry|0|.create_matrix|0|',
                             289)],
          'code-line': '    def create_matrix(dcim):\r\n',
          'first-line': 279L,
          'folded-linenos': [],
          'sel-line': 289L,
          'sel-line-start': 9713L,
          'selection_end': 9734L,
          'selection_start': 9721L,
          'zoom': 0L},
         1627957592.055],
        [loc('mri3d.py'),
         {'attrib-starts': [('MRI_Geometry|0|',
                             286),
                            ('MRI_Geometry|0|.get_closest|0|',
                             314)],
          'code-line': '            M    = MRI_Geometry.create_matrix(dcim)'\
                       '\r\n',
          'first-line': 305L,
          'folded-linenos': [],
          'sel-line': 318L,
          'sel-line-start': 10670L,
          'selection_end': 10715L,
          'selection_start': 10702L,
          'zoom': 0L},
         1627957592.211],
        [loc('segment3D.py'),
         {'attrib-starts': [],
          'code-line': '    args       = parser.parse_args()\r\n',
          'first-line': 63L,
          'folded-linenos': [],
          'sel-line': 76L,
          'sel-line-start': 3696L,
          'selection_end': 3732L,
          'selection_start': 3732L,
          'zoom': 0L},
         1627957598.766],
        [loc('segment3D.py'),
         {'attrib-starts': [('get_3d|0|',
                             30)],
          'code-line': '        Matrix = MRI_Geometry.create_matrix(dcim)\r'\
                       '\n',
          'first-line': 23L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 1564L,
          'selection_end': 1607L,
          'selection_start': 1594L,
          'zoom': 0L},
         1627957598.917],
        [loc('segment3D.py'),
         {'attrib-starts': [('get_3d|0|',
                             30)],
          'code-line': '                    vector_ij  = array([i,j,1])\r\n',
          'first-line': 23L,
          'folded-linenos': [],
          'sel-line': 40L,
          'sel-line-start': 1767L,
          'selection_end': 1811L,
          'selection_start': 1811L,
          'zoom': 0L},
         1627957684.015],
        [loc('segment1.py'),
         {'attrib-starts': [],
          'code-line': '# BoundingBox\r\n',
          'first-line': 62L,
          'folded-linenos': [],
          'sel-line': 78L,
          'sel-line-start': 3844L,
          'selection_end': 3857L,
          'selection_start': 3857L,
          'zoom': 0L},
         1627957684.077],
        [loc('segment1.py'),
         {'attrib-starts': [('SimpleSegmenter|0|',
                             39),
                            ('SimpleSegmenter|0|.segment|0|',
                             51)],
          'code-line': "        IJ_to_pos    = MRI_Geometry.create_matrix(dc"\
                       "ims['FLAIR'])\r\n",
          'first-line': 38L,
          'folded-linenos': [],
          'sel-line': 52L,
          'sel-line-start': 2375L,
          'selection_end': 2424L,
          'selection_start': 2411L,
          'zoom': 0L},
         1627957684.202],
        [loc('segment1.py'),
         {'attrib-starts': [('SimpleSegmenter|0|',
                             39),
                            ('SimpleSegmenter|0|.segment|0|',
                             51)],
          'code-line': "        IJ_to_pos    = MRI_Geometry.create_matrix(dc"\
                       "ims['FLAIR'])\r\n",
          'first-line': 38L,
          'folded-linenos': [],
          'sel-line': 52L,
          'sel-line-start': 2375L,
          'selection_end': 2392L,
          'selection_start': 2383L,
          'zoom': 0L},
         1627957710.539],
        [loc('mri3d.py'),
         {'attrib-starts': [('MRI_Geometry|0|',
                             286),
                            ('MRI_Geometry|0|.get_closest|0|',
                             314)],
          'code-line': '            M    = MRI_Geometry.create_matrix(dcim)'\
                       '\r\n',
          'first-line': 305L,
          'folded-linenos': [],
          'sel-line': 318L,
          'sel-line-start': 10670L,
          'selection_end': 10715L,
          'selection_start': 10702L,
          'zoom': 0L},
         1627957761.792],
        [loc('segment1.py'),
         {'attrib-starts': [('SimpleSegmenter|0|',
                             39),
                            ('SimpleSegmenter|0|.segment|0|',
                             51)],
          'code-line': "        centre_pixel = MRI_Geometry.create_midpoint("\
                       "dcims['FLAIR'])\r\n",
          'first-line': 38L,
          'folded-linenos': [],
          'sel-line': 53L,
          'sel-line-start': 2442L,
          'selection_end': 2493L,
          'selection_start': 2478L,
          'zoom': 0L},
         1627957793.184],
        [loc('mri3d.py'),
         {'attrib-starts': [('MRI_Geometry|0|',
                             286),
                            ('MRI_Geometry|0|.create_matrix|0|',
                             289)],
          'code-line': '            [Xx*delta_i, Yx*delta_j, Sx],\r\n',
          'first-line': 282L,
          'folded-linenos': [],
          'sel-line': 294L,
          'sel-line-start': 9942L,
          'selection_end': 9983L,
          'selection_start': 9983L,
          'zoom': 0L},
         1627959698.709],
        [loc('reslice.py'),
         {'attrib-starts': [],
          'code-line': 'img_shape = list(slices[0].pixel_array.shape)\r\n',
          'first-line': 42L,
          'folded-linenos': [],
          'sel-line': 61L,
          'sel-line-start': 1629L,
          'selection_end': 1629L,
          'selection_start': 1629L,
          'zoom': 0L},
         1627959842.219],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': 'reslice.py|Example snarfed from [pydicom examples](h'\
                       'ttps://pydicom.github.io/pydicom/stable/auto_example'\
                       's/index.html#image-processing)\r\n',
          'first-line': 2L,
          'folded-linenos': [],
          'sel-line': 11L,
          'sel-line-start': 447L,
          'selection_end': 496L,
          'selection_start': 496L,
          'zoom': 0L},
         1627962887.637]],
        20),
        'current-loc': loc('reslice.py'),
        'editor-state-list': [(loc('mri3d.py'),
                               {'attrib-starts': [('MRI_Geometry|0|',
        286),
        ('MRI_Geometry|0|.create_matrix|0|',
         289)],
                                'code-line': '            [Xx*delta_i, Yx*de'\
        'lta_j, Sx],\r\n',
                                'first-line': 282L,
                                'folded-linenos': [],
                                'sel-line': 294L,
                                'sel-line-start': 9942L,
                                'selection_end': 9983L,
                                'selection_start': 9983L,
                                'zoom': 0L}),
                              (loc('README.md'),
                               {'attrib-starts': [],
                                'code-line': 'reslice.py|Example snarfed fro'\
        'm [pydicom examples](https://pydicom.github.io/pydicom/stable/auto_'\
        'examples/index.html#image-processing)\r\n',
                                'first-line': 2L,
                                'folded-linenos': [],
                                'sel-line': 11L,
                                'sel-line-start': 447L,
                                'selection_end': 496L,
                                'selection_start': 496L,
                                'zoom': 0L}),
                              (loc('reslice.py'),
                               {'attrib-starts': [],
                                'code-line': 'img_shape = list(slices[0].pix'\
        'el_array.shape)\r\n',
                                'first-line': 21L,
                                'folded-linenos': [],
                                'sel-line': 61L,
                                'sel-line-start': 1629L,
                                'selection_end': 1629L,
                                'selection_start': 1629L,
                                'zoom': 0L}),
                              (loc('segment1.py'),
                               {'attrib-starts': [('SimpleSegmenter|0|',
        39),
        ('SimpleSegmenter|0|.segment|0|',
         51)],
                                'code-line': "        centre_pixel = MRI_Geo"\
        "metry.create_midpoint(dcims['FLAIR'])\r\n",
                                'first-line': 38L,
                                'folded-linenos': [],
                                'sel-line': 53L,
                                'sel-line-start': 2442L,
                                'selection_end': 2493L,
                                'selection_start': 2478L,
                                'zoom': 0L}),
                              (loc('segment3D.py'),
                               {'attrib-starts': [('get_3d|0|',
        30)],
                                'code-line': '                    vector_ij '\
        ' = array([i,j,1])\r\n',
                                'first-line': 23L,
                                'folded-linenos': [],
                                'sel-line': 40L,
                                'sel-line-start': 1767L,
                                'selection_end': 1811L,
                                'selection_start': 1811L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('mri3d.py'),
         loc('README.md'),
         loc('reslice.py'),
         loc('segment1.py'),
         loc('segment3D.py')]),
                               'open_files': [u'segment3D.py',
        u'mri3d.py',
        u'README.md',
        u'reslice.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1627963030.187),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1627959839.525),
                 'user_data': {}},
        'window-alloc': (319,
                         0,
                         1360,
                         736)}]}
guimgr.recent-documents = [loc('reslice.py'),
                           loc('README.md'),
                           loc('mri3d.py'),
                           loc('segment1.py'),
                           loc('segment3D.py')]
guimgr.visual-state = {loc('../AppData/Local/Programs/Python/Python38/Lib/argparse.py'): {'a'\
        'ttrib-starts': [('_ActionsContainer|0|',
                          1252),
                         ('_ActionsContainer|0|.add_argument|0|',
                          1336)],
        'code-line': "            raise ValueError('unknown action \"%s\"' %"\
                     " (action_class,))\r\n",
        'first-line': 1344L,
        'folded-linenos': [],
        'sel-line': 1366L,
        'sel-line-start': 49628L,
        'selection_end': 49628L,
        'selection_start': 49628L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/genericpath.py'): {'a'\
        'ttrib-starts': [('_check_arg_types|0|',
                          143)],
        'code-line': "            raise TypeError(f'{funcname}() argument mu"\
                     "st be str, bytes, or '\r\n",
        'first-line': 129L,
        'folded-linenos': [],
        'sel-line': 151L,
        'sel-line-start': 4846L,
        'selection_end': 4846L,
        'selection_start': 4846L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'): {'a'\
        'ttrib-starts': [('join|0|',
                          32)],
        'code-line': '    path = os.fspath(path)\r\n',
        'first-line': 61L,
        'folded-linenos': [],
        'sel-line': 77L,
        'sel-line-start': 2508L,
        'selection_end': 2508L,
        'selection_start': 2508L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'): {'a'\
        'ttrib-starts': [('Artist|0|',
                          59),
                         ('Artist|0|.update|0|',
                          971)],
        'code-line': '                        raise AttributeError(f"{type(s'\
                     'elf).__name__!r} object "\r\n',
        'first-line': 973L,
        'folded-linenos': [],
        'sel-line': 995L,
        'sel-line-start': 33157L,
        'selection_end': 33157L,
        'selection_start': 33157L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backends/backend_agg.py'): {'a'\
        'ttrib-starts': [('RendererAgg|0|',
                          70),
                         ('RendererAgg|0|.__init__|0|',
                          89)],
        'code-line': '        self._renderer = _RendererAgg(int(width), int('\
                     'height), dpi)\r\n',
        'first-line': 67L,
        'folded-linenos': [],
        'sel-line': 95L,
        'sel-line-start': 2918L,
        'selection_end': 2918L,
        'selection_start': 2918L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/gridspec.py'): {'a'\
        'ttrib-starts': [('SubplotSpec|0|',
                          601),
                         ('SubplotSpec|0|._from_subplot_args|0|',
                          644)],
        'code-line': '                    raise ValueError(\r\n',
        'first-line': 666L,
        'folded-linenos': [],
        'sel-line': 688L,
        'sel-line-start': 28686L,
        'selection_end': 28686L,
        'selection_start': 28686L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/fromnumeric.py'): {'a'\
        'ttrib-starts': [('_wrapreduction|0|',
                          69)],
        'code-line': '    return ufunc.reduce(obj, axis, dtype, out, **passk'\
                     'wargs)\r\n',
        'first-line': 64L,
        'folded-linenos': [],
        'sel-line': 86L,
        'sel-line-start': 2785L,
        'selection_end': 2785L,
        'selection_start': 2785L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/lib/stride_tricks.py'): {'a'\
        'ttrib-starts': [('_broadcast_shape|0|',
                          182)],
        'code-line': '    b = np.broadcast(*args[:32])\r\n',
        'first-line': 175L,
        'folded-linenos': [],
        'sel-line': 188L,
        'sel-line-start': 6485L,
        'selection_end': 6485L,
        'selection_start': 6485L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/indexes/base.py'): {'a'\
        'ttrib-starts': [('Index|0|',
                          149),
                         ('Index|0|.get_loc|0|',
                          3035)],
        'code-line': '                raise KeyError(key) from err\r\n',
        'first-line': 3059L,
        'folded-linenos': [],
        'sel-line': 3081L,
        'sel-line-start': 100141L,
        'selection_end': 100141L,
        'selection_start': 100141L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pydicom/dataset.py'): {'a'\
        'ttrib-starts': [('Dataset|0|',
                          220),
                         ('Dataset|0|.__getattr__|0|',
                          805)],
        'code-line': '        return object.__getattribute__(self, name)\n',
        'first-line': 820L,
        'folded-linenos': [],
        'sel-line': 834L,
        'sel-line-start': 28431L,
        'selection_end': 28431L,
        'selection_start': 28431L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pydicom/filereader.py'): {'a'\
        'ttrib-starts': [('dcmread|0|',
                          773)],
        'code-line': "        fp = open(fp, 'rb')\n",
        'first-line': 847L,
        'folded-linenos': [],
        'sel-line': 860L,
        'sel-line-start': 34810L,
        'selection_end': 34810L,
        'selection_start': 34810L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/tkinter/__init__.py'): {'a'\
        'ttrib-starts': [('BaseWidget|0|',
                          2517),
                         ('BaseWidget|0|.__init__|0|',
                          2554)],
        'code-line': '        self.tk.call(\r\n',
        'first-line': 2561L,
        'folded-linenos': [],
        'sel-line': 2566L,
        'sel-line-start': 95794L,
        'selection_end': 95794L,
        'selection_start': 95794L,
        'zoom': 0L},
                       loc('.gitignore'): {'attrib-starts': [],
        'code-line': '# Byte-compiled / optimized / DLL files\r\n',
        'first-line': 69L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('LICENSE'): {'attrib-starts': [],
        'code-line': 'in the Software without restriction, including without'\
                     ' limitation the rights\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 206L,
        'selection_end': 226L,
        'selection_start': 226L,
        'zoom': 0L},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': 'segment3D.py|Visualize & segment in 3D\r\n',
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 704L,
        'selection_end': 742L,
        'selection_start': 717L,
        'zoom': 0L},
                       loc('browse.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 88L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('consistent.py'): {'attrib-starts': [('plot_orbit'\
        '|0|',
        76)],
        'code-line': '        orbit, trivial, SeriesDescription, PatientPosi'\
                     'tion, ImageOrientationPatient,_ = series.get_orbit_for'\
                     '_plot()\r\n',
        'first-line': 69L,
        'folded-linenos': [],
        'sel-line': 83L,
        'sel-line-start': 3621L,
        'selection_end': 3643L,
        'selection_start': 3636L,
        'zoom': 0L},
                       loc('mri3d.py'): {'attrib-starts': [],
        'code-line': 'from numpy             import array, matmul, sign\r\n',
        'first-line': 10L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 1149L,
        'selection_end': 1192L,
        'selection_start': 1149L,
        'zoom': 0L},
                       loc('reslice.py'): {'attrib-starts': [],
        'code-line': 'img_shape = list(slices[0].pixel_array.shape)\r\n',
        'first-line': 42L,
        'folded-linenos': [],
        'sel-line': 61L,
        'sel-line-start': 1629L,
        'selection_end': 1629L,
        'selection_start': 1629L,
        'zoom': 0L},
                       loc('segment1.py'): {'attrib-starts': [],
        'code-line': '# BoundingBox\r\n',
        'first-line': 62L,
        'folded-linenos': [],
        'sel-line': 78L,
        'sel-line-start': 3844L,
        'selection_end': 3857L,
        'selection_start': 3857L,
        'zoom': 0L},
                       loc('segment3D.py'): {'attrib-starts': [],
        'code-line': "        ax1.set_zlabel('Z')\r\n",
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 84L,
        'sel-line-start': 4108L,
        'selection_end': 4135L,
        'selection_start': 4135L,
        'zoom': 0L},
                       loc('sizes.py'): {'attrib-starts': [],
        'code-line': '    collated = list(zip(*accumulator))\r\n',
        'first-line': 33L,
        'folded-linenos': [],
        'sel-line': 47L,
        'sel-line-start': 2471L,
        'selection_end': 2483L,
        'selection_start': 2475L,
        'zoom': 0L}}
search.replace-history = [u'ax3',
                          u'scrollbar_right',
                          u'scrollbar_left',
                          u'root',
                          u'slice_files',
                          u'plot_images',
                          u'Study',
                          u'Series']
search.search-history = [u'create_matrix',
                         u'ax2',
                         u'trivial',
                         u'tri',
                         u'tr',
                         u'zip',
                         u'ImagePlane.get',
                         u'norm',
                         u'inv',
                         u'read_csv',
                         u'normpath',
                         u'itemgetter',
                         u'ImagePlane.names',
                         u'ImagePlane',
                         u'create_cells',
                         u'plot_orbit',
                         u'declutter',
                         u'plot',
                         u'flair',
                         u'sagi']
