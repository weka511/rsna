#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('.gitignore'),
                  loc('browse.py'),
                  loc('LICENSE'),
                  loc('mri3d.py'),
                  loc('README.md'),
                  loc('segment1.py')]
proj.file-type = 'normal'
proj.launch-config = {loc('mri3d.py'): ('project',
        (u'--studies 00109  --unique foo.txt --show',
         '')),
                      loc('segment1.py'): ('project',
        (u'--study 00100',
         ''))}
[user attributes]
debug.recent-run-args = {loc('mri3d.py'): [u'--studies 00109  --unique foo.txt --show',
        u'--studies 00098  --unique foo.txt --show',
        u'--studies 00098 00099 00100 00102 --unique foo.txt',
        u'--studies 00098 00099 --unique foo.txt',
        u'--unique foo.txt',
        u'--studies 00811 --show',
        u'--studies 00000 --show',
        u'00000 --show',
        u'--show',
        u'00811 00814',
        u'--help',
        u'--output temp',
        u'---output temp'],
                         loc('segment1.py'): [u'--study 00100',
        u'--studu 00100',
        u'--seqs 63 65',
        u'--study 00098',
        u'--study 00098 --show',
        u'--study 00089 --show',
        u'--study 00089']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqE'\
        'mVIDbK',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(5,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'),
                      'abspath')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backends/backend_agg.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backends/backend_agg.py'),
                      'backend_version')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/gridspec.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/fromnumeric.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/fromnumeric.py'),
                      'alen')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/indexes/base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/indexes/base.py'),
                      'default_index')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pydicom/dataset.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pydicom/dataset.py'),
                      'Dataset')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pydicom/filereader.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pydicom/filereader.py'),
                      'data_element_generator')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/framework/func_graph.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/keras/layers/core.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/keras/layers/core.py'),
                      'Activation')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/tkinter/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/tkinter/__init__.py'),
                      'BaseWidget')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../learn/README.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('../learn/bayes1.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('../learn/bayes1.py'),
        'alphas')]},
        loc('../learn/cavi1.py'): {'expanded-nodes': [],
                                   'selected-nodes': [[('generic attribute',
        loc('../learn/cavi1.py'),
        'ys')]],
                                   'top-node': [('generic attribute',
        loc('../learn/cavi1.py'),
        'ax1')]},
        loc('../learn/fashion.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('generic attribute',
        loc('../learn/fashion.py'),
        '_')]],
                                     'top-node': [('generic attribute',
        loc('../learn/fashion.py'),
        'class_names')]},
        loc('../learn/fcs.py'): {'expanded-nodes': [],
                                 'selected-nodes': [None],
                                 'top-node': None},
        loc('../learn/fcs/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../learn/fcs/fcs.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('../learn/fcs/fcs.py'),
        'args')]},
        loc('../learn/fcs/gcps.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../learn/fcs/gcps.py'),
        'a')]},
        loc('../learn/fcs/partition.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../learn/fcs/partition.py'),
                      'args')]},
        loc('../learn/fcs/plotreds.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../learn/fcs/plotreds.py'),
                      'args')]},
        loc('../learn/flowers.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('generic attribute',
        loc('../learn/flowers.py'),
        '_')]],
                                     'top-node': [('generic attribute',
        loc('../learn/flowers.py'),
        'args')]},
        loc('../learn/train.py'): {'expanded-nodes': [],
                                   'selected-nodes': [[('generic attribute',
        loc('../learn/train.py'),
        '_')]],
                                   'top-node': [('generic attribute',
        loc('../learn/train.py'),
        'alpha')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('browse.py'): {'expanded-nodes': [],
                           'selected-nodes': [[('generic attribute',
        loc('browse.py'),
        'bottomframe')]],
                           'top-node': [('generic attribute',
        loc('browse.py'),
        'bottomframe')]},
        loc('mri3d.py'): {'expanded-nodes': [[('function def',
        loc('mri3d.py'),
        'plot_series')],
        [('class def',
          loc('mri3d.py'),
          'Study')]],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('mri3d.py'),
        'args')]},
        loc('segment1.py'): {'expanded-nodes': [],
                             'selected-nodes': [[('function def',
        loc('segment1.py'),
        'get_Z_score')]],
                             'top-node': [('generic attribute',
        loc('segment1.py'),
        'args')]},
        loc('unknown:<untitled> #1'): {'expanded-nodes': [],
                                       'selected-nodes': [None],
                                       'top-node': None}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'color',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'scrollbar_right',
                                       'fReverse': False,
                                       'fSearchText': u'sum',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': 'I',
                       'first-line': 101L,
                       'folded-linenos': [],
                       'history': {None: ['[1,2,3,4][0:2]\n',
        'def create_mapping(n=4):\n      def row(i):\n          return [(i,j'\
        ') for j in range(n)]\n      return array([row(i) for i in range(n)]'\
        ')\n',
        'from numy import array\n',
        'from numpy import array\n',
        'M[0,0]\n',
        'def create_mapping(n=4):\n     def row(i):\n         return [(i,j) '\
        'for j in range(n)]\n     return [row(i) for i in range(n)]\n',
        'M=create_mapping()\n',
        'M[0,1]\n',
        'M[0][1]\n',
        'M\n',
        'def create_mapping(n=4):\n       def row(i):\n           return [ar'\
        'ray((i,j)) for j in range(n)]\n       return [row(i) for i in \n',
        'def create_mapping(n=4):\n     def row(i):\n         return [array('\
        '[i,j]) for j in range(n)]\n     return [row(i) for i in range(n)]\n',
        'create_mapping()\n',
        'array(3,4)\n',
        'array((3,4))\n',
        'X=array((3,4))\n',
        'X\n',
        'X[0,0]=8\n',
        'int(1.9)\n',
        'round(1.9)\n']},
                       'launch-id': None,
                       'sel-line': 108L,
                       'sel-line-start': 2989L,
                       'selection_end': 2990L,
                       'selection_start': 2990L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('mri3d.py'),
        {'attrib-starts': [('Study|0|',
                            14),
                           ('Study|0|.Series|0|',
                            19),
                           ('Study|0|.Series|0|.get_orbit|0|',
                            110)],
         'code-line': '                trivial.append(dcim.pixel_array.sum()'\
                      '==0)\r\n',
         'first-line': 103L,
         'folded-linenos': [],
         'sel-line': 116L,
         'sel-line-start': 4045L,
         'selection_end': 4101L,
         'selection_start': 4076L,
         'zoom': 0L},
        1627074839.787],
        [loc('segment1.py'),
         {'attrib-starts': [],
          'code-line': "            axs[0,3].set_title('TO DO')\r\n",
          'first-line': 71L,
          'folded-linenos': [],
          'sel-line': 131L,
          'sel-line-start': 5517L,
          'selection_end': 5522L,
          'selection_start': 5522L,
          'zoom': 0L},
         1627079829.938],
        [loc('mri3d.py'),
         {'attrib-starts': [('hide_decorations|0|',
                             233)],
          'code-line': 'def hide_decorations(nrows,ncols,axs):\r\n',
          'first-line': 273L,
          'folded-linenos': [],
          'sel-line': 233L,
          'sel-line-start': 7804L,
          'selection_end': 7824L,
          'selection_start': 7808L,
          'zoom': 0L},
         1627079858.725],
        [loc('segment1.py'),
         {'attrib-starts': [('SimpleSegmenter|0|',
                             49),
                            ('SimpleSegmenter|0|.threshold_pixels|0|',
                             82)],
          'code-line': '\r\n',
          'first-line': 71L,
          'folded-linenos': [],
          'sel-line': 85L,
          'sel-line-start': 3358L,
          'selection_end': 3358L,
          'selection_start': 3358L,
          'zoom': 0L},
         1627079870.489],
        [loc('mri3d.py'),
         {'attrib-starts': [('plot_series|0|',
                             266)],
          'code-line': '\r\n',
          'first-line': 264L,
          'folded-linenos': [],
          'sel-line': 289L,
          'sel-line-start': 9490L,
          'selection_end': 9490L,
          'selection_start': 9490L,
          'zoom': 0L},
         1627080012.823],
        [loc('segment1.py'),
         {'attrib-starts': [],
          'code-line': 'from mri3d             import Study, declutter\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 9L,
          'sel-line-start': 476L,
          'selection_end': 522L,
          'selection_start': 522L,
          'zoom': 0L},
         1627080029.825],
        [loc('mri3d.py'),
         {'attrib-starts': [('declutter|0|',
                             233)],
          'code-line': '\r\n',
          'first-line': 228L,
          'folded-linenos': [],
          'sel-line': 238L,
          'sel-line-start': 8032L,
          'selection_end': 8032L,
          'selection_start': 8032L,
          'zoom': 0L},
         1627080069.68],
        [loc('segment1.py'),
         {'attrib-starts': [('SimpleSegmenter|0|',
                             49),
                            ('SimpleSegmenter|0|.segment|0|',
                             61)],
          'code-line': "                print (f'{min_distance} {min_distanc"\
                       "e2} {delta_i} {delta_j} mm')\r\n",
          'first-line': 45L,
          'folded-linenos': [],
          'sel-line': 69L,
          'sel-line-start': 2674L,
          'selection_end': 2728L,
          'selection_start': 2728L,
          'zoom': 0L},
         1627086152.539],
        [loc('mri3d.py'),
         {'attrib-starts': [('declutter|0|',
                             233)],
          'code-line': '\r\n',
          'first-line': 228L,
          'folded-linenos': [],
          'sel-line': 238L,
          'sel-line-start': 8032L,
          'selection_end': 8032L,
          'selection_start': 8032L,
          'zoom': 0L},
         1627086181.077],
        [loc('segment1.py'),
         {'attrib-starts': [('SimpleSegmenter|0|',
                             55),
                            ('SimpleSegmenter|0|.segment|0|',
                             67)],
          'code-line': "        II           = MRI_Geometry.create_mapping(d"\
                       "cims['FLAIR'].Rows,dcims['FLAIR'].Columns)\r\n",
          'first-line': 62L,
          'folded-linenos': [],
          'sel-line': 68L,
          'sel-line-start': 2395L,
          'selection_end': 2445L,
          'selection_start': 2431L,
          'zoom': 0L},
         1627103332.622],
        [loc('segment1.py'),
         {'attrib-starts': [('SimpleSegmenter|0|',
                             55),
                            ('SimpleSegmenter|0|.segment|0|',
                             67)],
          'code-line': '                dcims[series.name],min_distance,min_'\
                       'distance2,MM = MRI_Geometry.get_closest(series,centr'\
                       'e_pixel,centre_pos)\r\n',
          'first-line': 56L,
          'folded-linenos': [],
          'sel-line': 75L,
          'sel-line-start': 2814L,
          'selection_end': 2905L,
          'selection_start': 2894L,
          'zoom': 0L},
         1627103411.218],
        [loc('segment1.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 13L,
          'sel-line-start': 569L,
          'selection_end': 569L,
          'selection_start': 569L,
          'zoom': 0L},
         1627104082.956],
        [loc('mri3d.py'),
         {'attrib-starts': [('MRI_Geometry|0|',
                             286),
                            ('MRI_Geometry|0|.get_closest|0|',
                             315)],
          'code-line': '\r\n',
          'first-line': 308L,
          'folded-linenos': [],
          'sel-line': 328L,
          'sel-line-start': 11086L,
          'selection_end': 11086L,
          'selection_start': 11086L,
          'zoom': 0L},
         1627104100.454],
        [loc('segment1.py'),
         {'attrib-starts': [('SimpleSegmenter|0|',
                             15),
                            ('SimpleSegmenter|0|.segment|0|',
                             27)],
          'code-line': "                    print (f'Min distance={min_dista"\
                       "nce}, projected={min_distance2}, delta_i={delta_i}, "\
                       "delta_j={delta_j} (mm)')\r\n",
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 38L,
          'sel-line-start': 1577L,
          'selection_end': 1703L,
          'selection_start': 1703L,
          'zoom': 0L},
         1627104285.175],
        [loc('mri3d.py'),
         {'attrib-starts': [('MRI_Geometry|0|',
                             286),
                            ('MRI_Geometry|0|.get_closest|0|',
                             315)],
          'code-line': '\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 328L,
          'sel-line-start': 11086L,
          'selection_end': 11086L,
          'selection_start': 11086L,
          'zoom': 0L},
         1627104298.546],
        [loc('segment1.py'),
         {'attrib-starts': [],
          'code-line': 'from numpy             import array, mean, multiply,'\
                       ' std, ones_like, matmul\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 6L,
          'sel-line-start': 324L,
          'selection_end': 359L,
          'selection_start': 324L,
          'zoom': 0L},
         1627104312.929],
        [loc('mri3d.py'),
         {'attrib-starts': [],
          'code-line': 'from numpy             import array\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 2L,
          'sel-line-start': 153L,
          'selection_end': 188L,
          'selection_start': 188L,
          'zoom': 0L},
         1627104320.613],
        [loc('segment1.py'),
         {'attrib-starts': [],
          'code-line': 'from numpy             import array, mean, multiply,'\
                       ' std, ones_like, matmul\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 6L,
          'sel-line-start': 324L,
          'selection_end': 359L,
          'selection_start': 324L,
          'zoom': 0L},
         1627104333.835],
        [loc('mri3d.py'),
         {'attrib-starts': [],
          'code-line': 'from numpy             import array, matmul\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 2L,
          'sel-line-start': 153L,
          'selection_end': 196L,
          'selection_start': 196L,
          'zoom': 0L},
         1627104351.429],
        [loc('segment1.py'),
         {'attrib-starts': [],
          'code-line': 'from numpy.linalg      import inv, norm\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 7L,
          'sel-line-start': 401L,
          'selection_end': 440L,
          'selection_start': 401L,
          'zoom': 0L},
         1627104356.146]],
        20),
        'current-loc': loc('mri3d.py'),
        'editor-state-list': [(loc('mri3d.py'),
                               {'attrib-starts': [],
                                'code-line': '# Utilites for mapping coordin'\
        'ates\r\n',
                                'first-line': 286L,
                                'folded-linenos': [],
                                'sel-line': 290L,
                                'sel-line-start': 9632L,
                                'selection_end': 9658L,
                                'selection_start': 9658L,
                                'zoom': 0L}),
                              (loc('segment1.py'),
                               {'attrib-starts': [],
                                'code-line': 'from numpy.linalg      import '\
        'inv, norm\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 7L,
                                'sel-line-start': 401L,
                                'selection_end': 440L,
                                'selection_start': 401L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('mri3d.py'),
         loc('segment1.py')]),
                               'open_files': [u'segment1.py',
        u'mri3d.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1627103511.876),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1627069494.304),
                 'user_data': {}},
        'window-alloc': (219,
                         0,
                         1702,
                         912)}]}
guimgr.recent-documents = [loc('mri3d.py'),
                           loc('segment1.py')]
guimgr.visual-state = {loc('../AppData/Local/Programs/Python/Python38/Lib/argparse.py'): {'a'\
        'ttrib-starts': [('_ActionsContainer|0|',
                          1252),
                         ('_ActionsContainer|0|.add_argument|0|',
                          1336)],
        'code-line': "            raise ValueError('unknown action \"%s\"' %"\
                     " (action_class,))\r\n",
        'first-line': 1344L,
        'folded-linenos': [],
        'sel-line': 1366L,
        'sel-line-start': 49628L,
        'selection_end': 49628L,
        'selection_start': 49628L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/genericpath.py'): {'a'\
        'ttrib-starts': [('_check_arg_types|0|',
                          143)],
        'code-line': "            raise TypeError(f'{funcname}() argument mu"\
                     "st be str, bytes, or '\r\n",
        'first-line': 129L,
        'folded-linenos': [],
        'sel-line': 151L,
        'sel-line-start': 4846L,
        'selection_end': 4846L,
        'selection_start': 4846L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'): {'a'\
        'ttrib-starts': [('join|0|',
                          32)],
        'code-line': '    path = os.fspath(path)\r\n',
        'first-line': 61L,
        'folded-linenos': [],
        'sel-line': 77L,
        'sel-line-start': 2508L,
        'selection_end': 2508L,
        'selection_start': 2508L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'): {'a'\
        'ttrib-starts': [('Artist|0|',
                          59),
                         ('Artist|0|.update|0|',
                          971)],
        'code-line': '                        raise AttributeError(f"{type(s'\
                     'elf).__name__!r} object "\r\n',
        'first-line': 973L,
        'folded-linenos': [],
        'sel-line': 995L,
        'sel-line-start': 33157L,
        'selection_end': 33157L,
        'selection_start': 33157L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backends/backend_agg.py'): {'a'\
        'ttrib-starts': [('RendererAgg|0|',
                          70),
                         ('RendererAgg|0|.__init__|0|',
                          89)],
        'code-line': '        self._renderer = _RendererAgg(int(width), int('\
                     'height), dpi)\r\n',
        'first-line': 67L,
        'folded-linenos': [],
        'sel-line': 95L,
        'sel-line-start': 2918L,
        'selection_end': 2918L,
        'selection_start': 2918L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/gridspec.py'): {'a'\
        'ttrib-starts': [('GridSpecBase|0|',
                          25),
                         ('GridSpecBase|0|.__init__|0|',
                          31)],
        'code-line': '            raise ValueError(\r\n',
        'first-line': 25L,
        'folded-linenos': [],
        'sel-line': 47L,
        'sel-line-start': 1664L,
        'selection_end': 1664L,
        'selection_start': 1664L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/fromnumeric.py'): {'a'\
        'ttrib-starts': [('_wrapreduction|0|',
                          69)],
        'code-line': '    return ufunc.reduce(obj, axis, dtype, out, **passk'\
                     'wargs)\r\n',
        'first-line': 64L,
        'folded-linenos': [],
        'sel-line': 86L,
        'sel-line-start': 2785L,
        'selection_end': 2785L,
        'selection_start': 2785L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/indexes/base.py'): {'a'\
        'ttrib-starts': [('Index|0|',
                          149),
                         ('Index|0|.get_loc|0|',
                          3035)],
        'code-line': '                raise KeyError(key) from err\r\n',
        'first-line': 3059L,
        'folded-linenos': [],
        'sel-line': 3081L,
        'sel-line-start': 100141L,
        'selection_end': 100141L,
        'selection_start': 100141L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pydicom/dataset.py'): {'a'\
        'ttrib-starts': [('Dataset|0|',
                          220),
                         ('Dataset|0|.__getattr__|0|',
                          805)],
        'code-line': '        return object.__getattribute__(self, name)\n',
        'first-line': 820L,
        'folded-linenos': [],
        'sel-line': 834L,
        'sel-line-start': 28431L,
        'selection_end': 28431L,
        'selection_start': 28431L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pydicom/filereader.py'): {'a'\
        'ttrib-starts': [('dcmread|0|',
                          773)],
        'code-line': "        fp = open(fp, 'rb')\n",
        'first-line': 847L,
        'folded-linenos': [],
        'sel-line': 860L,
        'sel-line-start': 34810L,
        'selection_end': 34810L,
        'selection_start': 34810L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/tkinter/__init__.py'): {'a'\
        'ttrib-starts': [('BaseWidget|0|',
                          2517),
                         ('BaseWidget|0|.__init__|0|',
                          2554)],
        'code-line': '        self.tk.call(\r\n',
        'first-line': 2561L,
        'folded-linenos': [],
        'sel-line': 2566L,
        'sel-line-start': 95794L,
        'selection_end': 95794L,
        'selection_start': 95794L,
        'zoom': 0L},
                       loc('.gitignore'): {'attrib-starts': [],
        'code-line': '# Byte-compiled / optimized / DLL files\r\n',
        'first-line': 69L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': 'segmant1.py|Code based on [Brain tumor segmentation ba'\
                     'sed on deep learning and an attention mechanism using '\
                     'MRI multi-modalities brain images--Ramin Ranjbarzadeh '\
                     'et al](https://www.nature.com/articles/s41598-021-9042'\
                     '8-8)\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 410L,
        'selection_end': 630L,
        'selection_start': 436L,
        'zoom': 0L},
                       loc('segment1.py'): {'attrib-starts': [('Segmenter|0|',
        12)],
        'code-line': '   \r\n',
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 680L,
        'selection_end': 683L,
        'selection_start': 683L,
        'zoom': 0L}}
search.replace-history = [u'scrollbar_right',
                          u'scrollbar_left',
                          u'root',
                          u'slice_files',
                          u'plot_images',
                          u'Study',
                          u'Series']
search.search-history = [u'tight',
                         u'scrollbar2',
                         u'scrollbar1',
                         u'top',
                         u'image_files',
                         u'plot_series',
                         u'MRI_Study',
                         u'MRI_Series',
                         u'MRI_']
